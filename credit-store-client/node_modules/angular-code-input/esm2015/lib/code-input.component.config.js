/**
 * @fileoverview added by tsickle
 * Generated from: lib/code-input.component.config.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
/** @type {?} */
export const CodeInputComponentConfigToken = new InjectionToken('CodeInputComponentConfig');
/**
 * @record
 */
export function CodeInputComponentConfig() { }
if (false) {
    /** @type {?|undefined} */
    CodeInputComponentConfig.prototype.codeLength;
    /** @type {?|undefined} */
    CodeInputComponentConfig.prototype.inputType;
    /** @type {?|undefined} */
    CodeInputComponentConfig.prototype.initialFocusField;
    /** @type {?|undefined} */
    CodeInputComponentConfig.prototype.isCharsCode;
    /** @type {?|undefined} */
    CodeInputComponentConfig.prototype.isCodeHidden;
    /** @type {?|undefined} */
    CodeInputComponentConfig.prototype.isPrevFocusableAfterClearing;
    /** @type {?|undefined} */
    CodeInputComponentConfig.prototype.isFocusingOnLastByClickIfFilled;
    /** @type {?|undefined} */
    CodeInputComponentConfig.prototype.code;
}
/** @type {?} */
export const defaultComponentConfig = {
    codeLength: 4,
    inputType: 'tel',
    initialFocusField: undefined,
    isCharsCode: false,
    isCodeHidden: false,
    isPrevFocusableAfterClearing: true,
    isFocusingOnLastByClickIfFilled: false,
    code: undefined
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29kZS1pbnB1dC5jb21wb25lbnQuY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vYW5ndWxhci1jb2RlLWlucHV0L3NyYy9saWIvY29kZS1pbnB1dC5jb21wb25lbnQuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7QUFFN0MsTUFBTSxPQUFPLDZCQUE2QixHQUFHLElBQUksY0FBYyxDQUEyQiwwQkFBMEIsQ0FBQzs7OztBQUVySCw4Q0FTQzs7O0lBUkMsOENBQW9COztJQUNwQiw2Q0FBbUI7O0lBQ25CLHFEQUEyQjs7SUFDM0IsK0NBQXNCOztJQUN0QixnREFBdUI7O0lBQ3ZCLGdFQUF1Qzs7SUFDdkMsbUVBQTBDOztJQUMxQyx3Q0FBdUI7OztBQUd6QixNQUFNLE9BQU8sc0JBQXNCLEdBQTZCO0lBQzlELFVBQVUsRUFBRSxDQUFDO0lBQ2IsU0FBUyxFQUFFLEtBQUs7SUFDaEIsaUJBQWlCLEVBQUUsU0FBUztJQUM1QixXQUFXLEVBQUUsS0FBSztJQUNsQixZQUFZLEVBQUUsS0FBSztJQUNuQiw0QkFBNEIsRUFBRSxJQUFJO0lBQ2xDLCtCQUErQixFQUFFLEtBQUs7SUFDdEMsSUFBSSxFQUFFLFNBQVM7Q0FDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGlvblRva2VufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmV4cG9ydCBjb25zdCBDb2RlSW5wdXRDb21wb25lbnRDb25maWdUb2tlbiA9IG5ldyBJbmplY3Rpb25Ub2tlbjxDb2RlSW5wdXRDb21wb25lbnRDb25maWc+KCdDb2RlSW5wdXRDb21wb25lbnRDb25maWcnKTtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29kZUlucHV0Q29tcG9uZW50Q29uZmlnIHtcclxuICBjb2RlTGVuZ3RoPzogbnVtYmVyO1xyXG4gIGlucHV0VHlwZT86IHN0cmluZztcclxuICBpbml0aWFsRm9jdXNGaWVsZD86IG51bWJlcjtcclxuICBpc0NoYXJzQ29kZT86IGJvb2xlYW47XHJcbiAgaXNDb2RlSGlkZGVuPzogYm9vbGVhbjtcclxuICBpc1ByZXZGb2N1c2FibGVBZnRlckNsZWFyaW5nPzogYm9vbGVhbjtcclxuICBpc0ZvY3VzaW5nT25MYXN0QnlDbGlja0lmRmlsbGVkPzogYm9vbGVhbjtcclxuICBjb2RlPzogc3RyaW5nIHwgbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZGVmYXVsdENvbXBvbmVudENvbmZpZzogQ29kZUlucHV0Q29tcG9uZW50Q29uZmlnID0ge1xyXG4gIGNvZGVMZW5ndGg6IDQsXHJcbiAgaW5wdXRUeXBlOiAndGVsJyxcclxuICBpbml0aWFsRm9jdXNGaWVsZDogdW5kZWZpbmVkLFxyXG4gIGlzQ2hhcnNDb2RlOiBmYWxzZSxcclxuICBpc0NvZGVIaWRkZW46IGZhbHNlLFxyXG4gIGlzUHJldkZvY3VzYWJsZUFmdGVyQ2xlYXJpbmc6IHRydWUsXHJcbiAgaXNGb2N1c2luZ09uTGFzdEJ5Q2xpY2tJZkZpbGxlZDogZmFsc2UsXHJcbiAgY29kZTogdW5kZWZpbmVkXHJcbn07XHJcbiJdfQ==