{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../angular-code-input/src/lib/code-input.component.config.ts","../../../angular-code-input/src/lib/code-input.component.ts","../../../angular-code-input/src/lib/code-input.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","Object","create","__values","o","s","m","i","CodeInputComponentConfigToken","InjectionToken","defaultComponentConfig","codeLength","inputType","initialFocusField","undefined","isCharsCode","isCodeHidden","isPrevFocusableAfterClearing","isFocusingOnLastByClickIfFilled","code","InputState","ready","reset","CodeInputComponent","config","isNonDigitsCode","codeChanged","EventEmitter","codeCompleted","inputs","inputsStates","state","isFocusingAfterAppearingCompleted","isInitialFocusFieldEnabled","assign","prop","hasOwnProperty","prototype","ngOnInit","_codeLength","placeholders","Array","fill","isEmpty","ngAfterViewInit","_this","inputsList","forEach","item","nativeElement","onInputCodeChanges","ngAfterViewChecked","focusOnInputAfterAppearing","ngOnChanges","changes","isChangesEmitting","focusOnField","emitChanges","index","Error","focus","onClick","target","last","getCurrentFilledCode","setTimeout","onInput","data","canInputValue","preventDefault","stopPropagation","setInputValue","setStateForInput","values","toString","trim","split","j","blur","onPaste","clipboardData","getData","valIndex","input","val","onKeydown","isTargetEmpty","prev","isBackspaceKey","_a","chars","isAllCharsAreAllowed","chars_1","chars_1_1","char","document","activeElement","emitCode","emit","_b","_c","key","toLowerCase","keyCode","isReset","getStateForInput","selectionStart","classList","remove","add","test","indexOf","Component","args","selector","template","Optional","type","Inject","ViewChildren","Input","Output","CodeInputModule","forRoot","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const CodeInputComponentConfigToken = new InjectionToken<CodeInputComponentConfig>('CodeInputComponentConfig');\r\n\r\nexport interface CodeInputComponentConfig {\r\n  codeLength?: number;\r\n  inputType?: string;\r\n  initialFocusField?: number;\r\n  isCharsCode?: boolean;\r\n  isCodeHidden?: boolean;\r\n  isPrevFocusableAfterClearing?: boolean;\r\n  isFocusingOnLastByClickIfFilled?: boolean;\r\n  code?: string | number;\r\n}\r\n\r\nexport const defaultComponentConfig: CodeInputComponentConfig = {\r\n  codeLength: 4,\r\n  inputType: 'tel',\r\n  initialFocusField: undefined,\r\n  isCharsCode: false,\r\n  isCodeHidden: false,\r\n  isPrevFocusableAfterClearing: true,\r\n  isFocusingOnLastByClickIfFilled: false,\r\n  code: undefined\r\n};\r\n","import {\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChildren\n} from '@angular/core';\nimport {\n  CodeInputComponentConfig,\n  CodeInputComponentConfigToken,\n  defaultComponentConfig\n} from './code-input.component.config';\n\nenum InputState {\n  ready = 0,\n  reset = 1\n}\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'code-input',\n  templateUrl: 'code-input.component.html',\n  styleUrls: ['./code-input.component.scss']\n})\nexport class CodeInputComponent implements AfterViewInit, OnInit, OnChanges, AfterViewChecked, CodeInputComponentConfig {\n\n  @ViewChildren('input') inputsList !: QueryList<ElementRef>;\n\n  @Input() codeLength !: number;\n  @Input() inputType !: string;\n  @Input() initialFocusField?: number;\n  /** @deprecated Use isCharsCode prop instead. */\n  @Input() isNonDigitsCode = false;\n  @Input() isCharsCode !: boolean;\n  @Input() isCodeHidden !: boolean;\n  @Input() isPrevFocusableAfterClearing !: boolean;\n  @Input() isFocusingOnLastByClickIfFilled !: boolean;\n  @Input() code ?: string | number;\n\n  @Output() readonly codeChanged = new EventEmitter<string>();\n  @Output() readonly codeCompleted = new EventEmitter<string>();\n\n  public placeholders !: number[];\n\n  private inputs: HTMLInputElement[] = [];\n  private inputsStates: InputState[] = [];\n\n  // tslint:disable-next-line:variable-name\n  private _codeLength !: number;\n  private state = {\n    isFocusingAfterAppearingCompleted: false,\n    isInitialFocusFieldEnabled: false\n  };\n\n  constructor(@Optional() @Inject(CodeInputComponentConfigToken) config?: CodeInputComponentConfig) {\n    Object.assign(this, defaultComponentConfig);\n\n    if (!config) {\n      return;\n    }\n\n    // filtering for only valid config props\n    for (const prop in config) {\n      if (!config.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      if (!defaultComponentConfig.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      // @ts-ignore\n      this[prop] = config[prop];\n    }\n  }\n\n  /**\n   * Life cycle\n   */\n\n  ngOnInit(): void {\n    // defining internal code length prop for skipping external prop updates\n    this._codeLength = this.codeLength;\n    this.placeholders = Array(this._codeLength).fill(1);\n    this.state.isInitialFocusFieldEnabled = !this.isEmpty(this.initialFocusField);\n  }\n\n  ngAfterViewInit(): void {\n    this.inputsList.forEach((item) => {\n      this.inputs.push(item.nativeElement);\n      this.inputsStates.push(InputState.ready);\n    });\n\n    // the @Input code might have value. Checking\n    this.onInputCodeChanges();\n  }\n\n  ngAfterViewChecked(): void {\n    this.focusOnInputAfterAppearing();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.code) {\n      this.onInputCodeChanges();\n    }\n  }\n\n  /**\n   * Methods\n   */\n\n  reset(isChangesEmitting = false): void {\n    // resetting the code to its initial value or to an empty value\n    this.onInputCodeChanges();\n\n    if (this.state.isInitialFocusFieldEnabled) {\n      // tslint:disable-next-line:no-non-null-assertion\n      this.focusOnField(this.initialFocusField!);\n    }\n\n    if (isChangesEmitting) {\n      this.emitChanges();\n    }\n  }\n\n  focusOnField(index: number): void {\n    if (index >= this._codeLength) {\n      throw new Error('The index of the focusing input box should be less than the codeLength.');\n    }\n\n    this.inputs[index].focus();\n  }\n\n  onClick(e: any): void {\n    // handle click events only if the the prop is enabled\n    if (!this.isFocusingOnLastByClickIfFilled) {\n      return;\n    }\n\n    const target = e.target;\n    const last = this.inputs[this._codeLength - 1];\n    // already focused\n    if (target === last) {\n      return;\n    }\n\n    // check filling\n    const isFilled = this.getCurrentFilledCode().length >= this._codeLength;\n    if (!isFilled) {\n      return;\n    }\n\n    // focusing on the last input if is filled\n    setTimeout(() => last.focus());\n  }\n\n  onInput(e: any, i: number): void {\n    const target = e.target;\n    const value = e.data || target.value;\n\n    if (this.isEmpty(value)) {\n      return;\n    }\n\n    // only digits are allowed if isCharsCode flag is absent/false\n    if (!this.canInputValue(value)) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.setInputValue(target, null);\n      this.setStateForInput(target, InputState.reset);\n      return;\n    }\n\n    const values = value.toString().trim().split('');\n    for (let j = 0; j < values.length; j++) {\n      const index = j + i;\n      if (index > this._codeLength - 1) {\n        break;\n      }\n\n      this.setInputValue(this.inputs[index], values[j]);\n    }\n    this.emitChanges();\n\n    const next = i + values.length;\n    if (next > this._codeLength - 1) {\n      target.blur();\n      return;\n    }\n\n    this.inputs[next].focus();\n  }\n\n  onPaste(e: ClipboardEvent, i: number): void {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const data = e.clipboardData ? e.clipboardData.getData('text').trim() : undefined;\n\n    if (this.isEmpty(data)) {\n      return;\n    }\n\n    // Convert paste text into iterable\n    // tslint:disable-next-line:no-non-null-assertion\n    const values = data!.split('');\n    let valIndex = 0;\n\n    for (let j = i; j < this.inputs.length; j++) {\n      // The values end is reached. Loop exit\n      if (valIndex === values.length) {\n        break;\n      }\n\n      const input = this.inputs[j];\n      const val = values[valIndex];\n\n      // Cancel the loop when a value cannot be used\n      if (!this.canInputValue(val)) {\n        this.setInputValue(input, null);\n        this.setStateForInput(input, InputState.reset);\n        return;\n      }\n\n      this.setInputValue(input, val.toString());\n      valIndex++;\n    }\n\n    this.inputs[i].blur();\n    this.emitChanges();\n  }\n\n  async onKeydown(e: any, i: number): Promise<void> {\n    const target = e.target;\n    const isTargetEmpty = this.isEmpty(target.value);\n    const prev = i - 1;\n\n    // processing only backspace events\n    const isBackspaceKey = await this.isBackspaceKey(e);\n    if (!isBackspaceKey) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.setInputValue(target, null);\n    if (!isTargetEmpty) {\n      this.emitChanges();\n    }\n\n    if (prev < 0) {\n      return;\n    }\n\n    if (isTargetEmpty || this.isPrevFocusableAfterClearing) {\n      this.inputs[prev].focus();\n    }\n  }\n\n  private onInputCodeChanges(): void {\n    if (!this.inputs.length) {\n      return;\n    }\n\n    if (this.isEmpty(this.code)) {\n      this.inputs.forEach((input: HTMLInputElement) => {\n        this.setInputValue(input, null);\n      });\n      return;\n    }\n\n    // tslint:disable-next-line:no-non-null-assertion\n    const chars = this.code!.toString().trim().split('');\n    // checking if all the values are correct\n    let isAllCharsAreAllowed = true;\n    for (const char of chars) {\n      if (!this.canInputValue(char)) {\n        isAllCharsAreAllowed = false;\n        break;\n      }\n    }\n\n    this.inputs.forEach((input: HTMLInputElement, index: number) => {\n      const value = isAllCharsAreAllowed ? chars[index] : null;\n      this.setInputValue(input, value);\n    });\n  }\n\n  private focusOnInputAfterAppearing(): void {\n    if (!this.state.isInitialFocusFieldEnabled) {\n      return;\n    }\n\n    if (this.state.isFocusingAfterAppearingCompleted) {\n      return;\n    }\n\n    // tslint:disable-next-line:no-non-null-assertion\n    this.focusOnField(this.initialFocusField!);\n    // tslint:disable-next-line:no-non-null-assertion\n    this.state.isFocusingAfterAppearingCompleted = document.activeElement === this.inputs[this.initialFocusField!];\n  }\n\n  private emitChanges(): void {\n    setTimeout(() => this.emitCode(), 50);\n  }\n\n  private emitCode(): void {\n    const code = this.getCurrentFilledCode();\n\n    this.codeChanged.emit(code);\n\n    if (code.length >= this._codeLength) {\n      this.codeCompleted.emit(code);\n    }\n  }\n\n  private getCurrentFilledCode(): string {\n    let code = '';\n\n    for (const input of this.inputs) {\n      if (!this.isEmpty(input.value)) {\n        code += input.value;\n      }\n    }\n\n    return code;\n  }\n\n  private isBackspaceKey(e: any): Promise<boolean> {\n    const isBackspace = (e.key && e.key.toLowerCase() === 'backspace') || (e.keyCode && e.keyCode === 8);\n    if (isBackspace) {\n      return Promise.resolve(true);\n    }\n\n    // process only key with placeholder keycode on android devices\n    if (!e.keyCode || e.keyCode !== 229) {\n      return Promise.resolve(false);\n    }\n\n    return new Promise<boolean>((resolve) => {\n      setTimeout(() => {\n        const input = e.target;\n        const isReset = this.getStateForInput(input) === InputState.reset;\n        if (isReset) {\n          this.setStateForInput(input, InputState.ready);\n        }\n        // if backspace key pressed the caret will have position 0 (for single value field)\n        resolve(input.selectionStart === 0 && !isReset);\n      });\n    });\n  }\n\n  private setInputValue(input: HTMLInputElement, value: any): void {\n    const isEmpty = this.isEmpty(value);\n    const valueClassCSS = 'has-value';\n    const emptyClassCSS = 'empty';\n    if (isEmpty) {\n      input.value = '';\n      input.classList.remove(valueClassCSS);\n      // tslint:disable-next-line:no-non-null-assertion\n      input.parentElement!.classList.add(emptyClassCSS);\n    }\n    else {\n      input.value = value;\n      input.classList.add(valueClassCSS);\n      // tslint:disable-next-line:no-non-null-assertion\n      input.parentElement!.classList.remove(emptyClassCSS);\n    }\n  }\n\n  private canInputValue(value: any): boolean {\n    if (this.isEmpty(value)) {\n      return false;\n    }\n\n    const isDigitsValue = /^[0-9]+$/.test(value.toString());\n    return isDigitsValue || (this.isCharsCode || this.isNonDigitsCode);\n  }\n\n  private setStateForInput(input: HTMLInputElement, state: InputState): void {\n    const index = this.inputs.indexOf(input);\n    if (index < 0) {\n      return;\n    }\n\n    this.inputsStates[index] = state;\n  }\n\n  private getStateForInput(input: HTMLInputElement): InputState | undefined {\n    const index = this.inputs.indexOf(input);\n    return this.inputsStates[index];\n  }\n\n  private isEmpty(value: any): boolean {\n    return  value === null || value === undefined || !value.toString().length;\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CodeInputComponent } from './code-input.component';\nimport {CommonModule} from '@angular/common';\nimport {CodeInputComponentConfig, CodeInputComponentConfigToken} from './code-input.component.config';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    CodeInputComponent\n  ],\n  exports: [\n    CodeInputComponent\n  ]\n})\nexport class CodeInputModule {\n  static forRoot(config: CodeInputComponentConfig): ModuleWithProviders<CodeInputModule> {\n    return {\n      ngModule: CodeInputModule,\n      providers: [\n        {provide: CodeInputComponentConfigToken, useValue: config }\n      ]\n    };\n  }\n}\n"]}